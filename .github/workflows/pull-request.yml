name: Pull Request

env:
  PW_COMPONENT_FILTER:
on:
  pull_request:
    branches: [ main, develop]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  pr-lint:
    name: Lint
    timeout-minutes: 15 
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: 'https://registry.npmjs.org'
          always-auth: true

      - name: Install Package Dependencies üîó
        run: |
          npm ci --force

      - name: Run Lint Checks
        run: |
          npm run lint:check

  pr-format:
    name: Format
    timeout-minutes: 15 
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: 'https://registry.npmjs.org'
          always-auth: true

      - name: Install Package Dependencies üîó
        run: |
          npm ci --force

      - name: Run Format Checks
        run: |
          npm run format:check

  pr-test:
    needs: ["pr-lint", "pr-format"]
    name: "Test"
    timeout-minutes: 60 
    runs-on: macos-latest
    steps:
      - name: Configure OS
        run: |
          echo "Setting CGFontDisableAntialiasing"
          defaults write CoreGraphics CGFontDisableAntialiasing YES
          echo "Disabling AppleFontSmoothing"
          defaults write -g AppleFontSmoothing -int 0
          echo "Completed OS configure"

      - name: Dump env üí©
        run: env | sort

      - name: Dump GitHub context üí©
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
          
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          persist-credentials: true
          fetch-depth: 0
          token: ${{ secrets.PROTECTED_TOKEN }}

      - name: Ensure branch up to date üåø 
        # Only on branches
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: |
          git pull

      - name: Use Node.js 16.x ‚úî
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: 'https://registry.npmjs.org'
          always-auth: true

      - name: Install Package Dependencies
        run: |
          npm ci --force

      - uses: actions/github-script@v6
        id: get-component-filter
        with:
          script: |
            const path = require('path');
            const { execSync } = require('child_process');

            const ghCtx = ${{ toJson(github) }};
            const files = [];
            
            let list = '';
            if (ghCtx.event_name === 'workflow_dispatch') {
                try {
                    const response = await github.request(`GET /repos/${ghCtx.repository}/actions/runs`);
                    const before = response.data.workflow_runs.find(wr => wr.name === ghCtx.workflow && wr.id !== ghCtx.run_id && wr.head_sha && wr.head_sha !== ghCtx.sha && wr.head_branch === ghCtx.ref_name && wr.status === 'completed' && wr.conclusion !== 'failure')?.head_sha;
                    if (before) {
                        list = execSync(`git diff-tree --no-commit-id --name-only -r ${before} ${ghCtx.sha}`).toString();
                    }
                } catch (error) {
                }
            } else {
                list = execSync(`git diff-tree --no-commit-id --name-only -r ${ghCtx.event.pull_request?.base?.sha ?? ghCtx.event.before} ${ghCtx.sha}`).toString();
            }
            if (list.includes('src/core')) {
                return '';
            } else {
                list.split(/(\r\n|\n|\r)/gm).forEach(f => {
                    if (f.startsWith('src') && !f.startsWith('src/utils') && !f.endsWith('index.ts') && f.endsWith('.ts')) {
                        const filter = path.basename(f).replace('.stories', '').replace('.spec', '').replace('.ts', '');
                        if (!files.includes(filter)) {
                            files.push(filter);
                        }
                    }
                });

                const testFilter = files.join(' ');
                return testFilter;
            }
            return '';
          result-encoding: string
          
      - name: Update PW_COMPONENT_FILTER
        run: |
          PW_COMPONENT_FILTER="${{steps.get-component-filter.outputs.result}}"
          echo PW_COMPONENT_FILTER=${PW_COMPONENT_FILTER} >> $GITHUB_ENV

      - name: Install Playwright Chrome Dependencies
        run: npx playwright install --with-deps

      - name: Run Tests
        run: npm run test
        env:
          CI: true
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: coverage
          path: coverage/
          retention-days: 30

      - name: Auto Commit Changes üë©‚Äçüíª
        uses: stefanzweifel/git-auto-commit-action@v4
        # Only on branches with failures (in case the failure was caused by missing screenshots) or cancelled (usually caused by timeouts of too many missing screenshots)
        if: ${{ (failure() || cancelled()) && startsWith(github.ref, 'refs/heads/') }}
        with:
          commit_message: Added Missing Screenshots
          branch: ${{ env.GITHUB_REF_NAME }}
          file_pattern: '*.png'

